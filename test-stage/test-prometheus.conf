# Input: Tail logs from first app
<worker 1>
<source>
  @type tail
  path /var/log/res/aaaa.log
  pos_file /var/log/fluentd/cursor/k8s-1-prom.log.pos
  tag promtest.logs
  read_from_head true
  <parse>
    @type cri
    merge_cri_fields false
    <parse>
      @type json
    </parse>
  </parse>
</source>

# Input: Tail logs from second app

<source>
  @type tail
  path /var/log/res/bbbb.log
  pos_file /var/log/fluentd/cursor/k8s-2-prom.log.pos
  tag kuber.logs.second
  read_from_head true
  <parse>
    @type cri
    merge_cri_fields false
    <parse>
      @type json
    </parse>
  </parse>
</source>


# Expose Prometheus HTTP endpoint
#<source>
#  @type prometheus
#  bind 0.0.0.0
#  port 24231
#  metrics_path /metrics
#</source>

# Monitor Fluentd internals (optional addition)
<source>
  @type prometheus_monitor
  <labels>
    hostname ${hostname}
  </labels>
</source>

# Monitor output plugins
<source>
  @type prometheus_output_monitor
  interval 10
  <labels>
    hostname ${hostname}
  </labels>
</source>

# Monitor tail inputs (optional addition)
<source>
  @type prometheus_tail_monitor
  <labels>
    hostname ${hostname}
  </labels>
</source>

# Filter for first app metrics
<filter kubernetes.logs>
  @type prometheus
  <metric>
    name fluentd_input_status_num_records_total_first_app
    type counter
    desc The total number of incoming records from 1st app
    <labels>
      tag ${tag}
      hostname ${hostname}
    </labels>
  </metric>
</filter>

# Filter for second app metrics
<filter kuber.logs.second>
  @type prometheus
  <metric>
    name fluentd_input_status_num_records_total_second_app
    type counter
    desc The total number of incoming records from 2nd app
    <labels>
      tag ${tag}
      hostname ${hostname}
    </labels>
  </metric>
</filter>

# Output logs to stdout for debugging
<filter kubernetes.logs*>
  @type stdout
</filter>

# Output for first app
<match kubernetes.logs>
  @type copy
  <store>
    @type forward
    <server>
      host 192.168.1.104
      port 24224
    </server>
    <buffer>
      @type memory
      flush_interval 5s
    </buffer>
  </store>
  <store>
    @type file
    path /var/log/res/k8s.log
    <buffer>
      @type file
      path /var/log/fluentd/buffer-first
      flush_interval 10s
    </buffer>
    <format>
      @type json
    </format>
  </store>
  <store>
    @type prometheus
    <metric>
      name fluentd_output_status_num_records_total_first_app
      type counter
      desc The total number of outgoing records for first app
      <labels>
        tag ${tag}
        hostname ${hostname}
      </labels>
    </metric>
  </store>
</match>

# Output for second app
<match kuber.logs.second>
  @type copy
  <store>
    @type forward
    <server>
      host 192.168.1.104
      port 24224
    </server>
    <buffer>
      @type memory
      flush_interval 5s
    </buffer>
  </store>
  <store>
    @type file
    path /var/log/res/k8s-second.log
    <buffer>
      @type file
      path /var/log/fluentd/buffer-second
      flush_interval 10s
    </buffer>
    <format>
      @type json
    </format>
  </store>
  <store>
    @type prometheus
    <metric>
      name fluentd_output_status_num_records_total_second_app
      type counter
      desc The total number of outgoing records for second app
      <labels>
        tag ${tag}
        hostname ${hostname}
      </labels>
    </metric>
  </store>
</match>

<match promtest.logs>
  @type exec
  command "/usr/bin/ruby /etc/fluent/fluent.d/lookup_error.rb"
  format json
  buffer false
  out_keys log,error_code,error_code_message
</match>
<match promtest.logs>
  @type stdout
</match>
</worker>
